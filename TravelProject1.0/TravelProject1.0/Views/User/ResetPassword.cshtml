@section Styles
    {
    <style>
        .app-container {
            display: flex;
            align-items: center;
            justify-content: center;
            height: 70vh;
        }

        .app-content {
            background-color: white;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1);
            width: 420px;
            text-align: center;
        }

        .input-group .input-field {
            flex: 1;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 3px;
        }

        .input-label {
            font-weight: bold;
        }

        .input-field {
            width: 100%;
            padding: 10px;
            margin: 5px 0;
            border: 1px solid deepskyblue;
            border-radius: 3px;
        }

        .label-group {
            display: flex;
            align-items: center;
            margin-bottom: 10px;
        }

            .label-group .input-label {
                font-weight: bold;
                width: 100px;
                margin-right: 10px;
            }

        .dup {
            display: block;
            margin: 20px 150px;
            text-align: center;
            background-color: #fad384;
            padding: 8px;
            font-size: 15px;
            border-radius: 18px;
            outline: none;
            color: rgb(19, 23, 27);
            width: 100px;
            background-color: white;
            border: 1px solid deepskyblue;
            cursor: pointer;
        }

            .dup:hover {
                border: 1.5px solid black;
            }
    </style>
}
<title>重設密碼</title>


<div id="app">
    <div class="app-container">
        <div class="app-content">
            <h1>重新設定密碼</h1>
            <div class="label-group">
                <label for="newPassword" class="input-label">新的密碼</label>
                <input type="password" id="newPassword" name="newPassword" minlength="8" required v-model="newPassword" class="input-field">
            </div>
            <div class="text-danger" style="font-size:12px;" v-if="newPassword && !isValid(newPassword,validType.password)">您輸入的格式不正確</div>

            <div class="label-group">
                <label for="confirmPassword" class="input-label">重複確認密碼</label>
                <input type="password" id="confirmPassword" name="confirmPassword" minlength="8" required v-model="confirmPassword" class="input-field">
            </div>
            <div class="text-danger" style="font-size:12px;" v-if="confirmPassword && !passwordmatch">兩次輸入的密碼不一致</div>

            <button type="submit" @@click="resetPassword" class="dup">重設密碼</button>
        </div>
    </div>
</div>
@section Scripts
    {
    <script src="https://cdn.jsdelivr.net/npm/vue@2.7.14/dist/vue.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.4.0/axios.min.js" integrity="sha512-uMtXmF28A2Ab/JJO2t/vYhlaa/3ahUOgj1Zf27M5rOo8/+fcTUVH0/E0ll68njmjrLqOBjXM3V9NiPFL5ywWPQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="~/js/validation.min.js"></script>
    <script>
        var urlParams = new URLSearchParams(window.location.search);
        var emailToReset = urlParams.get('email');
        var vueApp = new Vue({
            el: "#app",
            data: {
                newPassword: "",
                confirmPassword: "",
                email: "",
                validType: validType,
            },
            methods: {
                isValid: function (str, type) {
                    return window.validation(str, type);
                },
                resetPassword: function () {
                    let _this = this;
                    if (!_this.emailToReset) {
                        alert("電子郵件不能為空");
                        return;
                    }
                    axios.put(`/api/UserApi/ResetPassword`, {
                        email: emailToReset,
                        newPassword: _this.newPassword,
                    }).then(response => {
                        if (response.data) {
                            window.location.href = "/User/Login";
                        }
                    }).catch(error => {
                        alert("密碼不能為空");
                    });
                },
            },
            computed: {
                passwordmatch: function () {
                    let _this = this;
                    var newPassword = _this.newPassword;
                    var confirmPassword = _this.confirmPassword;
                    if (newPassword === confirmPassword) {
                        return true;
                    }
                    return false;
                },
            },
            created: function () {
                let _this = this;
                if (!emailToReset) {
                    alert("電子郵件不能為空");
                    window.location.href = "/User/ResetPassword";
                }
            },
        });
    </script>


}