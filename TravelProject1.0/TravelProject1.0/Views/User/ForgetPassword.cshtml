@{
    ViewData["Title"] = "ForgetPassword";
}





<head>
    <title>密碼重設</title>
</head>
<body>
    <div id="app"> 
    <h1>忘記密碼</h1>
    <form id="forgotPasswordForm">
        <label for="email">Email:</label>
        <input type="email" id="email" name="email" v-model="verificationCode" required /><button type="submit" @@click="SendVerificationCode()">發送驗證信</button>
            <label for="text">驗證碼:</label>
            <input type="text" id="text" name="text"  required />
        <button type="submit" @@click="verifyCode()">
            <p v-if="resultMessage">{{resultMessage}}</p>
            提交
        </button>
    </form>
    </div>




</body>
@section Scripts
    {
    <script src="https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js"></script>
    <script>

        //不會執行連接到某個網頁的動作
        document.getElementById("forgotPasswordForm").addEventListener("submit", function (e) {
            e.preventDefault();

            var email = document.getElementById("email").value;
            let app = new Vue({
                data: {
                    verificationCode: '',
                     resultMessage: '',
                },
                el: "#app",
                computed: {
                },
                mounted: {},
                methods:
                 SendVerificationCode() {
                 const _this = this;
                 axios.post('/api/UserApi/SendVerificationCode', {
                    codeId: '',
                    code: _this.verificationCode,
                  })
                  .then(function (response) {
                   _this.resultMessage = response.data;
                 })
                 .catch(function (error) {
                   _this.resultMessage = '發生錯誤：' + error.message;
                  });
                },
                verifyCode() {
                 const _this = this;
                 axios.post('/api/UserApi/VerifyCode', {
                    codeId: '',
                    code: _this.verificationCode,
                  })
                  .then(function (response) {
                   _this.resultMessage = response.data;
                 })
                 .catch(function (error) {
                   _this.resultMessage = '發生錯誤：' + error.message;
                  });
                  },
              }
    </script>

}