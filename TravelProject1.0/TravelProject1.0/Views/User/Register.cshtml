@{
    ViewData["Title"] = "Register";
}

<h1>Register</h1>
<div id="app">
    <div class="panel panel-primary">
        <div class="panel-heading">
            <div class="panel-body">
               
                <div class="form-group">
                    <label for="name">姓名:</label>
                    <input type="text" class="form-control" v-model.trim="name" @@class="checkUsernameAvailability" />
                    <div class="invalid-feedback" v-if="!isValidName">已被註冊、或您輸入的格式錯誤</div>
                    <div v-if="usernameTaken">該用戶名已存在</div>
                </div>
                <div class="form-group">
                    <label for="gender"></label>
                    <input type="radio" v-model="gender" value="F" />男
                    <input type="radio" v-model="gender" value="M" />女
                </div>
                <div class="form-group">
                    <label for="birthday">生日:</label>
                    <input v-model.trim="birthday" type="datetime" class="form-control" />
                        <div class="invalid-feedback" v-if="!isValidBirthday">已被註冊、或您輸入的格式不正確</div>
                </div>
                <div class="form-group">
                    <label for="email">Email:</label>
                    <input v-model.trim="email" class="form-control" type="email" name="email" id="emailInput" placeholder="必填" required />
                    <div class="invalid-feedback" v-if="isValidEmail()" id="emailError">已被註冊、或您輸入的格式不正確</div>
                </div>
                <label for="address">Address:</label>
                <input v-model.trim="address" class="form-control" name="address" id="addressInput" placeholder="必填" required />
                <div class="invalid-feedback" v-if="!isValidEmail()" id="addressError">已被註冊、或您輸入的格式不正確</div>
            </div>
            <div class="form-group">
                <label for="phone">Phone:</label>
                <input v-model.trim="phone" type="text" class="form-control">
                <div class="invalid-feedback" v-if="!isValidPhoneNumber()">已被註冊、或您輸入的格式不正確</div>
            </div>
            <div class="form-group">
                <label for="password">密碼:</label>
                <input v-model.trim="password" type="password" class="form-control">
                <div class="invalid-feedback" v-if="!isValidPassword()">已被註冊、或您輸入的格式不正確</div>
            </div>
            <div class="form-group">
                <label for="confirmPassword">重複輸入密碼:</label>
                <input type="password" class="form-control">
                <div class="invalid-feedback">已被註冊、或您輸入的格式不正確</div>
            </div>
            <div v-manifest="passwordmatch()" class="invalid-feedback ">兩次所輸入密碼不一致</div>
        </div>
        <div class="panel-footer">
            <button type="button" class="btn btn-primary" id="submitButton" @@click ="Register">註冊</button>
        </div>
        
    </div>
</div>

<div class="modal fade" id="ErrorAlert" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">錯誤訊息</h4>
            </div>
            <div class="modal-body" id="ErrorMsg" style="overflow-x:auto;width:100%;">
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script src="https://cdn.jsdelivr.net/npm/vue@2.7.14/dist/vue.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.4.0/axios.min.js" integrity="sha512-uMtXmF28A2Ab/JJO2t/vYhlaa/3ahUOgj1Zf27M5rOo8/+fcTUVH0/E0ll68njmjrLqOBjXM3V9NiPFL5ywWPQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script>
        const emailInput = document.getElementById('emailInput');
        const addressInput = document.getElementById('addressInput');
        const emailError = document.getElementById('emailError');
        const addressError = document.getElementById('addressError');
        const submitButton = document.getElementById('submitButton');

        emailInput.addEventListener('input', validateEmail);

        function validateEmail() {
            const isValidEmail = this.$refs.emailInput.validity.valid && emailPattern.test(this.email);

            emailError.style.display = isValidEmail ? 'none' : 'block';
            addressError.style.display = isValidAddress ? 'none' : 'block';
            submitButton.disabled = (isValidEmail && isValidAddress) ? 'block' : 'none';

        var baseAddress = "https://localhost:7025";
        var vueApp = new Vue({
            el: '#app',
            data: {
                confirmPassword:"",
                username: '',
                usernameTaken: false,
                form: [],
                name: "",
                gender: "",
                birthday: "",
                phone: "",
                email: "",
                password: "",
                address: "",
                bool:"",
            },
            computed: {
                !isValidName() {
                    const namePattern = /^[A-Za-z\s]+$/;
                    return namePattern.test(this.name) && this.name.trim().length > 0;                
                },
                !isValidBirthday() {
                    const birthdayPattern = /^\d{4}-\d{2}-\d{2}$/;
                     return birthdayPattern.test(this.birthday) && this.birthday.trim().length > 0;
                },
               !isValidEmail() {
                     return this.$refs.emailInput.validity.valid && emailPattern.test(this.email);
                },
               !isValidAddress()  {
                    const addressPattern = /^[a-zA-Z0-9\s,]+$/;
                   return addressPattern.test(this.address) && this.address.trim().length > 0;
               },
               !isValidPassword() {
                     const passwordPattern ="^(?=.*[A-Za-z])(?=.*d)[A-Za-zd]{8,}$";
                    return passwordPattern.test(this.password);
                },
                !isValidPhoneNumber() {
                    const phonePattern = /^\+(?:[0-9] ?){6,14}[0-9]$/;
                   return phonePattern.test(this.phoneNumber);
                 },
                 passwordmatch(){
                 return this.password == this.confirmPassword
                 },
                   methods: {
                      Register: function () {     
                           let _this = this;
                           var form = {
                               UserId: "",
                               Name: _this.name,
                               Gender: _this.gender,
                               Birthday: _this.birthday,
                               Phone: _this.phone,
                               Email: _this.email,
                               Address: _this.address,
                               Password: _this.password
                           };
                           if (this.isValidName && this.isValidBirthday && this.isValidEmail && this.isValidAddress) { }
                           axios.post(`${baseAddress}/api/UserApi/PostUser`, form)
                               .then(response => {
                                   _this.bool = respons.data;
                                   console.log(response.data);
                                   if (_this.bool) {
                                       window.location.href = "https://localhost:7025/Home/Index";
                                   }
                                   else {
                                       window.location.href = "https://localhost:7025/User/Register";
                                   }
                               }).catch(err => {
                                   alert(err);
                               });
                            }   
                    },
                  checkUsernameAvailability: function() {
                 axios.get(`/api/check-username?username=${this.username}`)
                .then(response => {
                    this.usernameTaken = response.data.exists;
                })
                .catch(error => {
                    console.error('使用者已經存在啦', error);
                });
        }
                   }
                });

    </script>
}

