@section Styles{
    <link href="~/css/planetk.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-4bw+/aepP/YC94hEpVNVgiZdgIC5+VKNBQNGCHeKRQN+PtmoHDEXuppvnDJzQIu9" crossorigin="anonymous">
    <link href="~/css/admindashboard.css" rel="stylesheet" />
}


<div id="app">

    <div class="container">
        <br>
    </div>
    <!--頁首-->
    <header class="container-fluid row">
        <!--區塊-->
        <!--區塊-->
    </header>
    <!--頁首底-->
    <!--第一段-->
    <div class="container-fluid row  justify-content-between">
        <div class="col-2"></div>
        <br>
        <button type="button" class="btn solid  col-3" style="font-weight: bold;font-size: 1.2rem;color: gray; font-style: italic;" @@click="pricehigh">
            按金額大到小排序
        </button>
        <br>
        <button type="button" class="btn solid  col-3" style="font-weight: bold;font-size: 1.2rem;color: gray; font-style: italic;" @@click="pricelower">按金額小到大排序</button>
        <br>
        <div class="col-4"></div>
    </div>
    <br>
    <!------------------------------------第二段下拉選單--------------------------------------->
    <div class="container-fluid row justify-content-start">
        <div class="col-2  ">
            種類:
            <select v-model="opvalue" @@change="selectoption" class="form-select form-select-lg mb-3  " aria-label="Large select example">
                <option value="0" selected>請選擇</option>
                <option value="1">機票</option>
                <option value="2">住宿</option>
                <option value="3">交通</option>
                <option value="4">景點</option>
            </select>
        </div>
        <div class="col-2">
            商品名稱:
            <select v-model="locationvalue" @@change="selectlocation" class="form-select form-select-lg mb-3 " aria-label="Large select example">
                <option value="0" selected>請選擇</option>
                <option value="日本">日本</option>
                <option value="韓國">韓國</option>
                <option value="美國">美國</option>
                <option value="台灣">台灣</option>
                <option value="台中">台中</option>
                <option value="台南">台南</option>
                <option value="加拿大">加拿大</option>
                <option value="香港">香港</option>
            </select>
        </div>
        <div class="col-5">
        </div>
        <div class="col-3  " style="width:25%;height:70px; color: gray; ">
            關鍵字搜尋：<input type="text" v-model="filter" class="form-control" placeholder="請輸入篩選關鍵字" @@keyup="filterMerchandise" />
        </div>
    </div>
    <br>
    <!-----------------------------------------------第三段------------------------------------>
    <!--第四段-->
    @* <div class="container-fluid row">*@
    <!--管理選單-->
    @*        <div class="col-2">
    <ul class="list-group">
    <!--管理選單列--> <!--改道layout用-->
    <a class="btn" href="https://localhost:7025/api/Admin/Admin">使用者管理</a>
    <a class="btn" href="https://localhost:7025/api/Order/Order">訂單管理</a>
    <a class="btn" href="http://127.0.0.1:5500/admin.html">數據分析</a>
    <a class="btn" href="https://localhost:7025/api/Merchandise/Merchandise">商品管理</a>
    <!--管理選單底-->
    </ul>
    </div>*@
    <!--管理內容-->
    <div class="col-12">
        <!--這段吃完-->
        <!----------------------------------------------------按鍵----------------------------------->
        <!--新增刪除修改-->
        <span class="container-fluid   row">
            <div class="col-1"></div>
            @*新增員工紀錄案鍵*@
            <div class="form-group col-2 ">
                <button type="button" class="btn   btn-success" @@click="showModal" id="btn">新增商品</button>
            </div>
            <div class="col-3"></div>
            <div class="col-3"></div>
        </span>
        <!--這段吃完-->
        <!--換下一行-->
        <!------------------------------------------顯示管理內容--------------------------------------->
        <div class="table-responsive">

            <table class="table table-bordered  ">
                <thead>
                    <tr>
                        <th>產品ID</th>
                        <th>商品種類ID</th>
                        <th>商品名稱</th>
                        <th>金額</th>
                        <th>主要敘述</th>
                        <th>次要敘述</th>
                        <th>簡短敘述</th>
                        <th>操作</th>
                    </tr>
                </thead>
                <tbody>
                    <!--迴圈-->
                    <tr v-for="item in MerchandiseDTOes">
                        <!--修改-->
                        <template v-if="item.Edit==true">
                            <td>{{item.productId}}</td>
                            <td><input v-model="item.id" /></td>
                            <td><input v-model="item.productName" /></td>
                            <td><input v-model="item.price" /></td>
                            <td><textarea v-model="item.mainDescribe" style="height:100px;width: 500px;"></textarea>
                            <td><textarea v-model="item.subDescribe" style="height:100px;width: 500px;"></textarea>
                            <td><input v-model="item.shortDescribe" /></td>
                            <td>
                                <div class="d-flex justify-content-around">
                                    <button id="btninline" type="button" class="btn btn-success" @@click="update(item)">
                                        <div class="horizontal-text">
                                            <span>儲存</span>
                                        </div>
                                    </button>
                                    <div></div>
                                    <button id="btninline" type="button" class="btn btn-info" @@click="cancel">
                                        <div class="horizontal-text">
                                            <span>取消</span>
                                        </div>
                                    </button>
                                </div>
                            </td>
                        </template>
                        <!--正常-->
                        <template v-else>
                            <td>{{item.productId}}</td>
                            <td>{{item.id}}</td>
                            <td>{{item.productName}}</td>
                            <td>{{item.price}}</td>
                            <td>{{item.mainDescribe}}</td>
                            <td>{{item.subDescribe}}</td>
                            <td>{{item.shortDescribe}}</td>
                            <td>
                                <div class="d-flex justify-content-around">
                                    <button id="btninline" type="button" class="btn btn-warning"   @@click="edit(item.productId)">
                                        <div class="horizontal-text">
                                            <span>修改</span>
                                        </div>
                                    </button>
                                    
                                    <button id="btninline" type="button" class="btn btn-danger"   @@click="deleteMch(item.productId)">
                                        <div class="horizontal-text">
                                            <span>刪除</span>
                                        </div>
                                    </button>
                                </div>
                            </td>
                        </template>
                    </tr>
                </tbody>
            </table>
        </div>
        <br />
        <br />
        <!------------------------------------------新增紀錄的畫面--------------------------------------->
        <!-- Modal Body -->
        <!-- if you want to close by clicking outside the modal, delete the last endpoint:data-bs-backdrop and data-bs-keyboard -->
        <div class="modal fade" id="insertModal" tabindex="-1" data-bs-backdrop="static" data-bs-keyboard="false" role="dialog" aria-labelledby="modalTitleId" aria-hidden="true">
            <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered " role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="modalTitleId">新增商品紀錄</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="form-group">
                            <label class="form-label">商品種類Id</label>
                            <input v-model="id" type="text" class="form-control" />
                        </div>
                        <div class="form-group">
                            <label class="form-label">商品名稱</label>
                            <input v-model="productName" type="text" class="form-control" />
                        </div>
                        <div class="form-group">
                            <label class="form-label">金額</label>
                            <input v-model="price" type="text" class="form-control" />
                        </div>
                        <div class="form-group">
                            <label class="form-label">主要內文</label>
                            <textarea v-model="mainDescribe" type="text" class="form-control"
                                      style="height:100px;width: 500px;"></textarea>
                        </div>
                        <div class="form-group">
                            <label class="form-label">副內容</label>
                            <textarea v-model="subDescribe" type="text" class="form-control"
                                      style="height:100px;width: 500px;"></textarea>
                        </div>
                        <div class="form-group">
                            <label class="form-label">簡短描述</label>
                            <input v-model="shortDescribe" type="text" class="form-control" />
                        </div>
                        ____
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">關閉</button>
                        <button type="button" class="btn btn-primary" @@click="insert">新增</button>
                    </div>
                </div>
            </div>
        </div>
        <!------------------------------------------新增紀錄的畫面底--------------------------------------->







    </div>
    @*</div>*@
    <!--app-->
</div>
<!--app-->
<!--第四段 就是最後整段完-->
@section Scripts{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.4.0/axios.min.js" integrity="sha512-uMtXmF28A2Ab/JJO2t/vYhlaa/3ahUOgj1Zf27M5rOo8/+fcTUVH0/E0ll68njmjrLqOBjXM3V9NiPFL5ywWPQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="https://unpkg.com/vue@next"></script>
    <script src="~/js/planetk.js"></script>


    <script>
        var baseAddress = "https://localhost:7025"
        var vueApp = {
            data() {
                return {
                    MerchandiseDTOes: [],
                    Filter: '', //關鍵字
                    //新增
                    id: '',
                    productName: '',
                    price: '',
                    mainDescribe: '',
                    subDescribe: '',
                    shortDescribe: '',
                    //原本
                    originalid: '',
                    originalproductName: '',
                    originalprice: '',
                    originalmainDescribe: '',
                    originalsubDescribe: '',
                    originalshortDescribe: '',
                    //option
                    opvalue: 0,
                    locationvalue: 0,



                };
            },
            mounted: function () {
                let _this = this;
                _this.filterMerchandise();

            },
            methods: {
                //
                filterMerchandise: function () {
                    let _this = this;
                    //alert("篩選");
                    var request = {};
                    request.ProductId = isNaN(Number(_this.Filter)) ? -1 : Number(_this.Filter);
                    request.ProductName = request.MainDescribe = request.SubDescribe = _this.ShortDescribe = _this.Filter;
                    axios.post(`${baseAddress}/api/Merchandise/MerchandiseSearch`, request)
                        .then(response => {
                            _this.MerchandiseDTOes = response.data;
                            for (var i = 0; i < _this.MerchandiseDTOes.length; i++) {
                                var item = _this.MerchandiseDTOes[i];
                                item.Edit = false;

                            }
                        })
                        .catch(err => {
                            alert(err);
                        });
                },




                //取消
                cancel: function () {
                    //alert("delete");
                    let _this = this;
                    for (var i = 0; i < _this.MerchandiseDTOes.length; i++) {
                        var item = _this.MerchandiseDTOes[i];
                        if (item.Edit == true) {

                            item.Edit = false;
                            item.id = _this.originalid;
                            item.productName = _this.originalproductName;
                            item.price = _this.originalprice;
                            item.mainDescribe = _this.originalmainDescribe;
                            item.subDescribe = _this.originalsubDescribe;
                            item.shortDescribe = _this.originalshortDescribe;

                        }
                    }
                },
                //
                edit: function (productId) {
                    let _this = this;
                    for (var i = 0; i < _this.MerchandiseDTOes.length; i++) {
                        var item = _this.MerchandiseDTOes[i];
                        if (item.productId == productId) {
                            item.Edit = true;
                            _this.originalid = item.id;
                            _this.originalproductName = item.productName;
                            _this.originalprice = item.price;
                            _this.originalmainDescribe = item.mainDescribe;
                            _this.originalsubDescribe = item.subDescribe;
                            _this.originalshortDescribe = item.shortDescribe;
                        }

                    }
                },
                //儲存
                update: function (item) {
                    let _this = this;
                    var request = {};

                    request.ProductId = item.productId;
                    request.Id = item.id;
                    request.ProductName = item.productName;
                    request.Price = item.price;
                    request.MainDescribe = item.mainDescribe;
                    request.SubDescribe = item.subDescribe;
                    request.ShortDescribe = item.shortDescribe;
                    axios.put(`${baseAddress}/api/Merchandise/MerchandisePUT/${item.productId}`, request).then(response => {
                        alert(response.data);
                        _this.filterMerchandise();
                    }).catch(err => {
                        alert(err);
                    });

                },
                //
                deleteMch: function (productId) {
                    var ret = confirm('確定要刪除嗎?');
                    let _this = this;

                    if (ret == true) {
                        axios.delete(`${baseAddress}/api/Merchandise/MerchandiseDELETE/${productId}`).then(response => {
                            alert(response.data);
                            _this.filterMerchandise();
                        }).catch(err => {
                            alert(err);
                        })


                    }
                },
                //showModal
                showModal: function () {
                    $("#insertModal").modal("show");
                },
                //insert
                insert: function () {
                    let _this = this;
                    //alert("insert");

                    var request = {

                        ProductId: 0,
                        Id: _this.id,
                        ProductName: _this.productName,
                        Price: _this.price,
                        MainDescribe: _this.mainDescribe,
                        SubDescribe: _this.subDescribe,
                        ShortDescribe: _this.shortDescribe,
                    };
                    axios.post(`${baseAddress}/api/Merchandise/MerchandiseADD`, request).then(response => {
                        alert(response.data);
                        //$('#insertModal').modal("hide");
                        _this.filterMerchandise();
                    }).catch(err => {
                        alert(err);
                    });

                },
                // option id
                selectoption: function () {

                    let _this = this;
                    var opvalue = _this.opvalue;

                    if (opvalue == 0) {
                        return;
                    }

                    axios.get(`${baseAddress}/api/Merchandise/MerchandiseOption/${opvalue}`)
                        .then(response => {
                            _this.MerchandiseDTOes = response.data;
                            for (var i = 0; i < _this.MerchandiseDTOes.length; i++) {
                                var item = _this.MerchandiseDTOes[i];
                                item.Edit = false;

                            }
                        })
                        .catch(err => {
                            alert(err);
                        });


                },
                //option location
                selectlocation: function () {

                    let _this = this;
                    var locationvalue = _this.locationvalue;

                    if (locationvalue == 0) {
                        return;
                    }

                    axios.get(`${baseAddress}/api/Merchandise/Merchandiselocation/${locationvalue}`)
                        .then(response => {
                            _this.MerchandiseDTOes = response.data;
                            for (var i = 0; i < _this.MerchandiseDTOes.length; i++) {
                                var item = _this.MerchandiseDTOes[i];
                                item.Edit = false;

                            }
                        })
                        .catch(err => {
                            alert(err);
                        });


                },

                //由小到大
                pricelower: function () {
                    let _this = this;
                    axios.get(`${baseAddress}/api/Merchandise/pricelower`)
                        .then(response => {
                            _this.MerchandiseDTOes = response.data;
                            for (var i = 0; i < _this.MerchandiseDTOes.length; i++) {
                                var item = _this.MerchandiseDTOes[i];
                                item.EDit = false;
                            }
                        }).catch(err => {
                            alert(err);
                        });
                },

                //由大到小
                pricehigh: function () {
                    let _this = this;
                    axios.get(`${baseAddress}/api/Merchandise/pricehigh`)
                        .then(response => {
                            _this.MerchandiseDTOes = response.data;
                            for (var i = 0; i < _this.MerchandiseDTOes.length; i++) {
                                var item = _this.MerchandiseDTOes[i];
                                item.EDit = false;
                            }
                        }).catch(err => {
                            alert(err);
                        });
                },







            }
        };

        var app = Vue.createApp(vueApp).mount("#app");
    </script>





    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-4bw+/aepP/YC94hEpVNVgiZdgIC5+VKNBQNGCHeKRQN+PtmoHDEXuppvnDJzQIu9" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-HwwvtgBNo3bZJJLYd8oVXjrBZt8cqVSpeBNS5n7C8IVInixGAoxmnlMuBnhbgrkm" crossorigin="anonymous">
    </script>
    <script src="https://kit.fontawesome.com/ea5c2c7c03.js" crossorigin="anonymous"></script>

    }

