@section Styles{
	<link href="~/css/planetk.css" rel="stylesheet" />
	<link href="~/css/Super.css" rel="stylesheet" />	
	<style>
		td {
			height: 50px;
			border: 1px solid silver;
			text-align:center;
		}
		.formatError {
			color: #dc3545;
			font-size: .875em;
		}
	</style>
}

<div id="app">
	<br />
	<br />
	<br />
	<div>
		<div style="color:black;font-size:36px;">管理員管理</div>
		<div class="row" style="width:25%;margin-left:800px;">
			關鍵字搜尋：<input type="text" v-model="Filter" class="form-control" placeholder="請輸入篩選關鍵字"  @@keyup="filterEmployees"  />
		</div>		
	</div>	
	
	<br />
	<br />

	<div class="container">
		<div class="form-group">
			@*新增管理員記錄按鍵*@
			<button type="button" class="btn btn-primary" @@click="showModal">新增管理員</button>
		</div>
		<table style="width:1000px;color:black;border:1px solid rgb(242, 242, 242)">
			<tr>
				<td>AdminID</td>
				<td>管理權限</td>
				<td>管理人</td>
				<td>帳號</td>
				<td>建立日期</td>
				<td>上線時間</td>
				<td></td>
			</tr>
			<tr v-for="item in SuperDTOes">
					<td>{{item.id}}</td>
					<td>{{item.describe}}</td>
					<td>{{item.name}}</td>
					<td>{{item.account}}</td>
					<td>{{item.createDate | formatDate}}</td>
					<td>{{item.loginDate | formatDate}}</td>
					<td>
					<button type="button" class="btn btn-warning" @@click="updateModal">編輯</button>
						<button type="button" class="btn btn-danger" @@click="deleteSuper(item.id)">刪除</button>
					</td>
			</tr>
		</table>
	</div>

	@*新增員工記錄Bootstrap Modal畫面*@
	<div class="modal fade" id="insertModal" tabindex="-1" data-bs-backdrop="static" data-bs-keyboard="false" role="dialog" aria-labelledby="modalTitleId" aria-hidden="true">
		<div class="modal-dialog modal-dialog-scrollable modal-dialog-centered modal-sm" role="document">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title" id="modalTitleId">新增管理人</h5>
					<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
				</div>
				<div class="modal-body">
					<div class="form-group">
						<label class="form-label">管理人：</label>
						<input v-model.trim="name" type="text" class="form-control" required />
						<div v-if="!isValid(name,validType.name)" class="formatError">您輸入的格式錯誤</div>
					</div>
					<div class="form-group">
						<label class="form-label">帳號：</label>
						<input v-model.trim="account" type="email" class="form-control" required />
						<div class="formatError" v-if="!isValid(account,validType.email)" >您輸入的格式不正確</div>
					</div>
					<div class="form-group">
						<label class="form-label">密碼：</label>
						<input v-model.trim="password" type="password" class="form-control" required />
						<div class="formatError" v-if="!isValid(password,validType.password)">您輸入的格式不正確</div>
					</div>
					<div class="form-group">
						<label class="form-label">管理權限描述：</label>
						<input v-model.trim="describe" type="text" class="form-control" required />
						<div class="formatError" v-if="!isValid(describe,validType.name)">請輸入管理權限描述</div>
					</div>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-primary" @@click="insert">新增</button>
				</div>
			</div>
		</div>
	</div>


	@*修改員工記錄Bootstrap Modal畫面*@
	<div class="modal fade" id="updateModal" tabindex="-1" data-bs-backdrop="static" data-bs-keyboard="false" role="dialog" aria-labelledby="modalTitleId" aria-hidden="true">
		<div class="modal-dialog modal-dialog-scrollable modal-dialog-centered modal-sm" role="document">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title" id="modalTitleId">修改管理人資料</h5>
					<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
				</div>
				<div class="modal-body">
					<div class="form-group">
						<label class="form-label">管理人：</label>
						<input v-model.trim="name" type="text" class="form-control" v-bind:value="name" required />
						<div v-if="!isValid(name,validType.name)" class="formatError">您輸入的格式錯誤</div>
					</div>
					<div class="form-group">
						<label class="form-label">帳號：</label>
						<input v-model.trim="account" type="email" class="form-control" required />
						<div class="formatError" v-if="!isValid(account,validType.email)">您輸入的格式不正確</div>
					</div>
					<div class="form-group">
						<label class="form-label">密碼：</label>
						<input v-model.trim="password" type="password" class="form-control" required />
						<div class="formatError" v-if="!isValid(password,validType.password)">您輸入的格式不正確</div>
					</div>
					<div class="form-group">
						<label class="form-label">管理權限描述：</label>
						<input v-model.trim="describe" type="text" class="form-control" required />
						<div class="formatError" v-if="!isValid(describe,validType.name)">請輸入管理權限描述</div>
					</div>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-primary" @@click="update">修改</button>
				</div>
			</div>
		</div>
	</div>


</div>

@section Scripts{

	<script src="https://cdn.jsdelivr.net/npm/vue@2.7.14/dist/vue.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.4.0/axios.min.js" integrity="sha512-uMtXmF28A2Ab/JJO2t/vYhlaa/3ahUOgj1Zf27M5rOo8/+fcTUVH0/E0ll68njmjrLqOBjXM3V9NiPFL5ywWPQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
	<script src="~/js/validation.min.js"></script>
	<script>
		var baseAddress = "https://localhost:7025";
		var vueApp = new Vue({
			el: '#app',
			data: {
				SuperDTOes: [],
				Filter: '',
				name: '',
				account: '',
				password: '',
				role: '',
				describe: '',
				createDate: '',
				validType: validType,
				originalDescribe:'',
				originalName:'',
				originalAccount:'',
				originalPassword:'',
				originalCreateDate:'',
				originalLoginDate:'',
				originalRole: ''
			},
			mounted: function () {
				let _this = this;
				_this.filterEmployees();

				// fetch(`${baseAddress}/api/SuperApi/SuperGET`).then(response => {
				// 	if (response.ok) return response.json()
				// }).then(data => {
				// 	_this.SuperDTOes = data;
				// 	console.log(data);
				// }).catch(error => {
				// 	console.log(error);
				// })
			},
			filters: {
				formatDate: function (str) {
					if (!str) return "";
					var d = new Date(str);
					return `${d.getFullYear()}/${d.getMonth() + 1}/${d.getDate()}`
				}
			},
			methods: {
				isValid: function (str, type) {
					return window.validation(str, type);
				},
				filterEmployees: function () {
					// alert("篩選");
					let _this = this;
					var request = {};
					request.Id = isNaN(Number(_this.Filter)) ? -1 : Number(_this.Filter);
					request.RoleId = request.Id;
					request.Name = request.Account = request.Password = request.Role = request.Describe =  _this.Filter;
					// request.CreateDate = request.LoginDate = new Date();
					axios.post(`${baseAddress}/api/SuperApi/SuperSearch`, request)
						.then(response => {
							_this.SuperDTOes = response.data;
						}).catch(err => {
							alert(err);
						});
				},
				showModal: function () {
					//alert('新增員工');
					$("#insertModal").modal('show');
				},
				updateModal: function () {
					// alert('修改員工');
					$("#updateModal").modal('show');
				},
				insert: function () {
					//alert('aa');
					let _this = this;
					_this.isValid();
					var request = {
						Id: 0,		//不能缺
						Name: _this.name,
						Account: _this.account,
						Password: _this.password,
						Role: _this.role,
						Describe:_this.describe,
						CreateDate: /* _this.createDate */ new Date(),
						LoginDate: new Date()
					};
					axios.post(`${baseAddress}/api/SuperApi/SuperPost`, request)
						.then(response => {
							// alert(response.data);
							$("#insertModal").modal("hide");
							_this.filterEmployees();
						}).catch(err => {
							alert(err);
						});
				},
				deleteSuper: function (id) {
					//alert("delete");
					var ret = confirm("確定要刪除嗎？");
					if (ret == true) {
						let _this = this;
						axios.delete(`${baseAddress}/api/SuperApi/SuperDel/${id}`).then(response => {
							_this.filterEmployees();
						}).catch(err => {
							alert(err);
						});
					}
				},

				update: function (item) {
					//alert("update");
					let _this = this;
					var request = {}
					request.Id = item.Id;
					request.Name = item.Name;
					request.Account = item.Account;
					request.Password = item.Password;
					request.Role = item.Role;
					request.Describe = item.Describe;
					request.Password = item.Password;
					axios.put(`${baseAddress}/api/SuperApi/PutSuper/${item.id}`, request).then(response => {
						alert(response.data);
						_this.filterEmployees();
					}).catch(err => {
						alert(err);
					});
				},

			}
		})

	</script>
}