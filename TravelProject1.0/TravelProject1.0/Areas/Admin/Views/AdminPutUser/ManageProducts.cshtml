@section Styles
    {
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css" integrity="sha512-z3gLpd7yknf1YoNbCzqRKc4qyor8gaKU1qmn+CShxbuBusANI9QpRohGBreCFkKxLhei6S9CQXFEbbKuqLg0DA==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    @*  <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css"> *@
    <style>
        .beauty-label {
            font-family: Arial, sans-serif;
            font-size: 16px;
            color: #333;
            margin-bottom: 5px;
            margin-left: 40px;
        }

        .beauty-input {
            width: 200px;
            padding: 10px;
            margin-bottom: 10px;
            border: 1px solid #ccc;
            border-radius: 4px;
            font-family: Arial, sans-serif;
            font-size: 14px;
            outline: none;
        }

            .beauty-input:hover {
                border-color: #007bff;
            }


            .beauty-input:focus {
                border-color: #007bff;
            }

        .fatbeauty-input {
            width: 300px;
            height: 200px;
            padding: 10px;
            margin-bottom: 10px;
            border: 1px solid #ccc;
            border-radius: 4px;
            font-family: Arial, sans-serif;
            font-size: 14px;
        }

            .fatbeauty-input:hover {
                border-color: #007bff;
            }


            .fatbeauty-input:focus {
                border-color: #007bff;
            }


        table {
            table-layout: auto;
            border-collapse: collapse;
        }

        .table tbody tr:nth-child(odd) {
            background-color: #ffffff;
        }

        .table tbody tr:nth-child(even) {
            background-color: #caf0f8;
        }

        .table tbody tr:hover {
            background-color: #edf2fb;
        }

        .morewidth {
            width: 200px;
        }

        .beauty-width {
            max-width: 400px;
            width: 100%;
            margin: 0 auto;
            height: 400px;
        }

        .second-beauty-width {
            max-width: 400px;
            width: 100%;
            margin: 0 auto;
            height: 475px;
        }

        .scrollable-container {
            max-height: 400px;
            overflow-y: auto;
        }

        .ellipsis {
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            max-width: 200px;
        }

        textarea{
            resize:none;
        }
    </style>
}
<div id="app">
    <br>
    <br>
    <div>
        <div class="row">
            @* 搜尋 *@
            <div class="col-4">
                <input class="beauty-input" type="text" placeholder="Search..." v-model="searchQuery" @@keyup="search">
            </div>
            @* 排序 *@
            <div class="col-6 ">
                <div class="sort d-flex align-items-center">
                    <div>
                        <h4 class="title_color sort-title">排序：</h4>
                    </div>
                    <h4>
                        <span>
                            <a href="#" v-on:click="OrderByPrice"><i class="fa-solid fa-caret-down fa-beat"></i>金額高到低</a>
                        </span>
                        <span>|</span>
                        <span>
                            <a href="#" v-on:click="OrderByDescendingPrice"><i class="fa-solid fa-caret-up fa-beat"></i>金額低到高</a>
                        </span>
                    </h4>
                </div>
            </div>
            @* 新增商品 *@
            <div class="col-2 ">
                <button type="button" class="btn btn-success" data-toggle="modal" data-target="#createProductModal">新增商品</button>
            </div>
        </div>
        @* 新增商品modal *@
        <div class="modal" id="createProductModal" data-backdrop="static" data-keyboard="false" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLabel">新增商品</h5>
                        <button type="button" class="btn-close" data-dismiss="modal" aria-label="Close">X</button>
                    </div>
                    <div class="modal-body">
                       <div class="container">
                            
                            <div class="form-group">
                                <label for="email" v-model="newProduct.id">種類編號</label>
                                <select class="form-control" id="exampleFormControlSelect1">
                                    <option value="1">機票</option>
                                    <option value="2">住宿</option>
                                    <option value="3">交通</option>
                                    <option value="4">景點</option>
                                </select>
                            </div>
                            <div class="form-group">
                                <label for="productName">商品名稱:</label>
                                <input type="email" class="form-control" id="productName" v-model="newProduct.productName">
                            </div>
                            <div class="form-group">
                                <label for="price">商品價格:</label>
                                <input type="text" class="form-control" id="price" v-model="newProduct.price">
                            </div>
                            <div class="form-group">
                                <label for="mainDescribe">主要敘述:</label>
                                <textarea class="form-control" id="mainDescribe" v-model="newProduct.mainDescribe" rows="3"></textarea>
                            </div>
                            <div class="form-group">
                                <label for="subDescribe">更多敘述:</label>
                                <input type="text" class="form-control" id="subDescribe" v-model="newProduct.subDescribe">
                            </div>
                            <div class="form-group">
                                <label for="shortDescribe">補充說明:</label>
                                <input type="text" class="form-control" id="shortDescribe" v-model="newProduct.shortDescribe">
                            </div>
                            <div>
                                <input class="beauty-input" type="file" @@change="chooseFile" />
                                <button type="submit" @@click="uploadFile">上傳</button>
                            </div>
                       </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" @@click="createProduct">新增</button>
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">取消</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    @* 商品資訊 *@
    <div class="table-responsive">
        <table class="table table-striped table-hover">
            <thead>
                <tr>
                    <th style="width:125px;">商品編號</th>
                    <th>種類編號</th>
                    <th>商品名稱</th>
                    <th style="width:100px;">價格</th>
                    <th>主要敘述</th>
                </tr>
            </thead>
            <tbody>
                <tr v-for="pp in putProduct">
                    <td>{{pp.productId}}</td>
                    <td>{{pp.id}}</td>
                    <td>{{pp.productName}}</td>
                    <td>{{pp.price}}</td>
                    <td class="ellipsis">{{pp.mainDescribe}}</td>
                    <td>
                        <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#UserDetail"
                                @@click="display(pp.productId)">
                            詳細資料
                        </button>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>

    @* 商品詳細資訊 *@
    <div id="UserDetail" class="modal" tabindex="-1">
        <div class="modal-dialog beauty-width text-center  fade">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title d-flex justify-content-center">商品詳細資料</h5>
                    <button type="button" class="btn-close" data-dismiss="modal" aria-label="Close">X</button>
                </div>
                <div class="modal-body" style="max-height: 400px; overflow-y: auto;">
                    <table class="table table-striped table-hover">
                        <tbody>
                            @* 修改使用者資訊視窗 *@
                            <template v-if="editOpen">
                                <tr>
                                    <td><label>商品編號:</label><input class="beauty-input" v-model="UpdateProduct.productId" disabled /></td>
                                </tr>
                                <tr>
                                    <td>
                                        <label>
                                            種類編號:
                                            <select v-model="UpdateProduct.id">
                                                <option value="1">機票</option>
                                                <option value="2">住宿</option>
                                                <option value="3">交通</option>
                                                <option value="4">景點</option>
                                            </select>
                                        </label>
                                </tr>
                                <tr>
                                    <td><label>商品名稱:</label><input class="beauty-input" v-model="UpdateProduct.productName" /> </td>
                                </tr>
                                <tr>
                                    <td><label>主要敘述:</label><input class="beauty-input" v-model="UpdateProduct.mainDescribe" /> </td>
                                </tr>
                                <tr>
                                    <td><label>更多敘述:</label><input class="beauty-input" v-model="UpdateProduct.subDescribe" /></td>
                                </tr>
                                <tr>
                                    <td><label>補充說明:</label><input class="beauty-input" v-model="UpdateProduct.shortDescribe" /></td>
                                </tr>
                            </template>
                            @* 修改使用者資訊視窗 *@
                            @* 顯示使用者資訊視窗 *@
                            <template v-else>
                                <tr>
                                    <td><label>商品編號:</label>{{UpdateProduct.productId}}</td>
                                </tr>
                                <tr>
                                    <td><label>種類編號:</label>{{UpdateProduct.id}}</td>
                                </tr>
                                <tr>
                                    <td><label>商品名稱:</label>{{UpdateProduct.productName}}</td>
                                </tr>
                                <tr>
                                    <td><label>主要敘述:</label>{{UpdateProduct.mainDescribe}}</td>
                                </tr>
                                <tr>
                                    <td><label>更多敘述:</label>{{UpdateProduct.subDescribe}}</td>
                                </tr>
                                <tr>
                                    <td><label>補充說明:</label>{{UpdateProduct.shortDescribe}}</td>
                                </tr>
                                <tr>
                                    <td>
                                        <label>商品照片:</label>
                                        <img :src="UpdateProduct.imagePath" style="width:200px;" />
                                    </td>
                                </tr>
                            </template>
                            @* 顯示產品資訊視窗 *@
                        </tbody>
                    </table>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-warning" @@click="UpdateProductInfo(UpdateProduct.productId)" v-if="editOpen">更新</button>
                    <button type="button" class="btn btn-danger" @@click="deleteUser(UpdateProduct.productId)" v-if="editOpen">刪除</button>
                    <button type="button" class="btn btn-warning" @@click="edit" v-else>修改</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">取消</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script src="~/lib/jquery/dist/jquery.min.js" asp-append-version="true"></script>
    <script src="/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/vue@2.7.14/dist/vue.js"></script>
    <script>
        var baseAddress = "https://localhost:7025";
        var app = new Vue({
            el: '#app',
            data: {
                putProduct: [],
                editOpen: null,
                UpdateProduct: {},
                newProduct: {
                    id: '',
                    productName: '',
                    mainDescribe: '',
                    price: '',
                    subDescribe: '',
                    shortDescribe: '',
                },
                searchQuery: '',
                form: [],
                selectFile: '',
            },
            mounted: function () {
                let _this = this;
                fetch(`/api/ProductApi/AdminGetProduct`).then(response => {
                    if (response.ok) return response.json();
                }).then(data => {
                    _this.putProduct = data;
                }).catch(err => {
                    alert("資料讀取失敗");
                })
            },
            methods: {
                chooseFile: function (event) {
                    let _this = this;
                    _this.selectFile = event.target.files[0];
                },
                uploadFile: function () {
                    let _this = this;
                    if (_this.selectFile) {
                        var formData = new FormData();
                        formData.append("file", _this.selectFile);
                        fetch(`/api/PictureApi/UploadPhoto`, {
                            method: 'POST',
                            body: formData,
                            headers: {
                                'Content-Type': 'multipart/form-data'
                            }
                            })
                            .then(response => {
                                if (response.ok) return response.json();
                            })
                            .then(data => {
                                _this.selectFile = data;
                                alert("照片上傳成功");
                            })
                            .catch(err => {
                                alert("照片上傳失敗.請再重新選擇一次");
                            });
                    }
                    else
                    {
                         alert("請再選擇一次")
                    }
                },
                //金額低到高
                OrderByPrice: function () {
                    let _this = this;
                    fetch(`/api/ProductApi/OrderByPrice`, {
                        method: "GET"
                    }).then(response => {
                        if (response.ok) return response.json();
                    }).then(data => {
                        _this.putProduct = data;
                    }).catch(error => {
                        alert(error);
                    });
                },
                //金額高到低
                OrderByDescendingPrice: function () {
                    let _this = this;
                    fetch(`/api/ProductApi/OrderByDescendingPrice`, {
                        method: "GET"
                    }).then(response => {
                        if (response.ok) return response.json();
                    }).then(data => {
                        _this.putProduct = data;
                    }).catch(error => {
                        alert(error);
                    });
                },
                //新增商品
                createProduct: function () {
                    let _this = this;
                    var form = {
                        Id: _this.newProduct.id,
                        ProductName: _this.newProduct.productName,
                        MainDescribe: _this.newProduct.mainDescribe,
                        Price: _this.newProduct.price,
                        SubDescribe: _this.newProduct.subDescribe,
                        ShortDescribe: _this.newProduct.shortDescribe,
                    };
                    fetch(`/api/ProductApi/AdminPostProduct`, {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(form),
                    }).then((response) => {
                        if (response.ok) return response.json();
                    }).then((data) => {
                        alert("商品成功新增");
                        window.location.href = "/Admin/AdminPutUser/ManageProducts";
                    }).catch((err) => {
                        alert("新增失敗：" + err.message);
                    });
                },
                //商品詳細資訊
                display: function (productId) {
                    let _this = this;
                    _this.editOpen = false;
                    fetch(`/api/ProductApi/GetProductDetails/${productId}`)
                        .then(response => {
                            if (response.ok) return response.json();
                        })
                        .then(data => {
                            _this.UpdateProduct = data;
                            console.log(_this.UpdateProduct);
                        }).catch(err => {
                            alert("資料讀取失敗");
                        });
                },
                edit: function () {
                    let _this = this;
                    _this.editOpen = true;
                },
                UpdateProductInfo: function (productId) {
                    let _this = this;
                    let result = confirm(`確定要更新產品名稱為${_this.UpdateProduct.productId}的產品資訊？`)
                    if (result == true) {
                        let request = {
                            Id: _this.UpdateProduct.id,
                            ProductName: _this.UpdateProduct.productName,
                            MainDescribe: _this.UpdateProduct.mainDescribe,
                            Price: _this.UpdateProduct.price,
                            SubDescribe: _this.UpdateProduct.subDescribe,
                            ShortDescribe: _this.UpdateProduct.shortDescribe,
                        };
                        fetch(`/api/ProductApi/PutProduct/${productId}`, {
                            method: "PUT",
                            headers: {
                                "Content-Type": "application/json",
                            },
                            body: JSON.stringify(request)
                        })
                            .then((response) => { response.json() })
                            .then(data => {
                                _this.editOpen = false;
                                // _this.newProduct = data;
                                console.log(data);
                            })
                            .catch(err => {
                                alert("修改失敗,請檢查必填有無填寫")
                            });
                    }
                },
                deleteUser: function (productId) {
                    let _this = this;
                    let result = confirm(`確定要刪除產品編號為${productId}的商品嗎？`);
                    if (result == true) {
                        fetch(`/api/ProductApi/DeleteProduct/${productId}`, {
                            method: "DELETE"
                        }).then((response) => {
                            if (response.ok) return response.text();
                        }).then(data => {
                            alert("刪除成功");
                            window.location.href = "/Admin/AdminPutUser/ManageProducts";
                        }).catch(err => {
                            alert("刪除失敗");
                        });
                    }
                },
                search: function () {
                    let _this = this;
                    if (_this.searchQuery.trim() == '') {
                        _this.searchQuery = '';
                        // 不執行篩選，直接獲取所有商品
                        fetch(`/api/ProductApi/AdminGetProduct`)
                            .then(response => {
                                if (response.ok) return response.json();
                            })
                            .then(data => {
                                _this.putProduct = data;
                            })
                            .catch(err => {
                                alert("資料讀取失敗");
                            });
                    } else {
                        // 執行根據搜尋條件篩選商品
                        fetch(`/api/ProductApi/AdminSearchProducut?query=${_this.searchQuery}`, {
                            method: "GET"
                        }).then(response => {
                            if (response.ok) return response.json();
                        }).then(data => {
                            _this.putProduct = data;
                        }).catch(error => {
                            alert(error);
                        });
                    }
                },

                clear() {
                    let _this = this
                    _this.searchQuery = '';
                    _this.search();
                },
            }
        });
    </script>
}
