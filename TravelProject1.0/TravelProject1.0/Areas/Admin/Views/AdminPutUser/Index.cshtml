@section Styles
    {
    @*  <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css"> *@
    <style>
        .beauty-label {
            font-family: Arial, sans-serif;
            font-size: 16px;
            color: #333;
            margin-bottom: 5px;
            margin-left: 40px;
        }

        .beauty-input {
            width: 200px;
            padding: 10px;
            margin-bottom: 10px;
            border: 1px solid #ccc;
            border-radius: 4px;
            font-family: Arial, sans-serif;
            font-size: 14px;
            outline: none;
        }

            .beauty-input:hover {
                border-color: #007bff;
            }


            .beauty-input:focus {
                border-color: #007bff;
            }


        table {
            table-layout: auto;
            border-collapse: collapse;
        }


        .morewidth {
            width: 200px;
        }

        .beauty-width {
            max-width: 400px; 
            width: 100%; 
            margin: 0 auto;
        }
    </style>
}
<div id="app">
    <br>
    <br>
    <div>
        <div class="row">
            <div class="col-4">
                <input type="text" placeholder="Search..." v-model="searchQuery">
                <button class="btn btn-primary" @@click="search">Search</button>
            </div>
            <div class="col-6 ">
                <div class="sort d-flex align-items-center">
                    <div>
                        <h4 class="title_color sort-title">排序：</h4>
                    </div>
                    <h4>
                        <span>
                            <a href="#" v-on:click="sortAscendingAge"><i class="fas fa-funnel-dollar"></i>年齡高到低</a>
                        </span>
                        <span>|</span>
                        <span>
                            <a href="#" v-on:click="sortDescendingAge"><i class="fas fa-funnel-dollar"></i>年齡低到高</a>
                        </span>
                    </h4>
                </div>
            </div>
            <div class="col-2 ">
                <button type="button" class="btn btn-success" @@click="openCreateUserModal">新增會員</button>
            </div>
        </div>
        <div class="modal fade" id="createUserModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog beauty-width text-center">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLabel">新增會員</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">X</button>
                    </div>
                    <div class="modal-body">
                        <div class="form-group">
                            <label for="name">名稱</label>
                            <input type="text" class="beauty-input" id="name" v-model="newUser.name">
                        </div>
                        <div class="form-group">
                            <label for="email">信箱</label>
                            <input type="email" class="beauty-input" id="email" v-model="newUser.email">
                        </div>
                        <div class="form-group">
                            <label for="gender">性別</label>
                            <select v-model="newUser.gender" class="beauty-input" >
                                <option value="M">男</option>
                                <option value="F">女</option>
                                <option value="N">不指定</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="password">密碼</label>
                            <input type="password" class="beauty-input" id="password" v-model="newUser.password">
                        </div>
                        <div class="form-group">
                            <label for="birthday">生日</label>
                            <input type="date" class="beauty-input" id="birthday" v-model="newUser.birthday">
                        </div>
                        <div class="form-group">
                            <label for="phone">電話</label>
                            <input type="text" class="beauty-input" id="phone" v-model="newUser.phone">
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">取消</button>
                        <button type="button" class="btn btn-primary" @@click="createUser">新增</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <br>

    <div class="table-responsive">
        <table class="table table-striped table-hover">
            <thead>
                <tr>
                    <th style="width:75px;">編號</th>
                    <th>會員名稱</th>
                    <th>信箱</th>
                    <th style="width:100px;">性別</th>
                    <th>生日</th>
                    <th>電話</th>
                    <th>編輯</th>
                </tr>
            </thead>
            <tbody>
                <tr v-for="pu in putUser">
                    <td>{{pu.id}}</td>
                    <td>{{pu.name}}</td>
                    <td>{{pu.email}}</td>
                    <td>{{pu.gender}}</td>
                    <td>{{pu.birthday}}</td>
                    <td>{{pu.phone}}</td>
                    <td>
                        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal"
                                @@click="display(pu.id)">
                            編輯
                        </button>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
    <div id="UserDetail" class="modal" tabindex="-1">
        <div class="modal-dialog beauty-width text-center">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title d-flex justify-content-center">使用者詳細資料</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">X</button>
                </div>
                <div class="modal-body">
                    <table class="table table-striped table-hover">
                        <tbody>
                            @* 修改使用者資訊視窗 *@
                            <template v-if="editOpen">
                                <tr>
                                    <td><label>會員編號:</label><input class="beauty-input" v-model="UpdateUser.userId" disabled /></td>
                                </tr>
                                <tr>
                                    <td><label>會員名稱:</label><input class="beauty-input" v-model="UpdateUser.name" /></td>
                                </tr>
                                <tr>
                                    <td><label>信箱:</label><input class="beauty-input" v-model="UpdateUser.email" /> </td>
                                </tr>
                                <tr>
                                    <td><label>性別:</label><input class="beauty-input" v-model="UpdateUser.gender" /></td>
                                </tr>
                                <tr>
                                    <td><label>生日:</label><input class="beauty-input" type="date" v-model="UpdateUser.birthday" /></td>
                                </tr>
                                <tr>
                                    <td><label>電話:</label><input class="beauty-input" v-model="UpdateUser.phone" disabled /></td>
                                </tr>


                            </template>
                            @* 修改使用者資訊視窗 *@
                            @* 顯示使用者資訊視窗 *@
                            <template v-else>
                                <tr>
                                    <td><label>會員編號:</label>{{UpdateUser.userId}}</td>
                                </tr>
                                <tr>
                                    <td><label>會員名稱:</label>{{UpdateUser.name}}</td>
                                </tr>
                                <tr>
                                    <td><label>信箱:</label>{{UpdateUser.email}}</td>
                                </tr>
                                <tr>
                                    <td><label>性別:</label>{{UpdateUser.gender}}</td>
                                </tr>
                                <tr>
                                    <td><label>生日:</label>{{UpdateUser.birthday}}</td>
                                </tr>
                                <tr>
                                    <td><label>電話:</label>{{UpdateUser.phone}}</td>
                                </tr>
                            </template>
                            @* 顯示產品資訊視窗 *@
                        </tbody>
                    </table>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-warning" @@click="updateUser(UpdateUser.userId)" v-if="editOpen">更新</button>
                    <button type="button" class="btn btn-danger" @@click="deleteUser(UpdateUser.userId)" v-if="editOpen">刪除</button>
                    <button type="button" class="btn btn-warning" @@click="edit" v-else>修改</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">取消</button>
                </div>
            </div>
        </div>
    </div>
</div>







@section Scripts
    {
    <script src="~/lib/jquery/dist/jquery.min.js" asp-append-version="true"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/js/bootstrap.min.js" integrity="sha384-lpyLfhYuitXl2zRZ5Bn2fqnhNAKOAaM/0Kr9laMspuaMiZfGmfwRNFh8HlMy49eQ" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/vue@2.7.14/dist/vue.js"></script>
    <script>
        var baseAddress = "https://localhost:7025";
        var app = new Vue({
            el: '#app',
            data: {
                putUser: [],
                editOpen: null,
                UpdateUser: {},
                newUser: {
                    name: '',
                    email: '',
                    gender: '',
                    birthday: '',
                    phone: '',
                    password:'',            
                },
                searchQuery: '',
            },
            mounted: function () {
                let _this = this;
                fetch(`${baseAddress}/api/adminApi/AdminGetUser`).then(response => {
                    if (response.ok) return response.json();
                }).then(data => {
                    _this.putUser = data;
                }).catch(err => {
                    alert("資料讀取失敗");
                })
            },
            methods: {
                sortAscendingAge: function () {
                    let _this = this;
                    fetch(`${baseAddress}/api/adminApi/OrderByAge`, {
                        method: "GET" 
                        }).then(response => {
                            if (response.ok) return response.json();
                        }).then(data => {
                            _this.putUser = data;
                        }).catch(error => {
                            alert(error);
                        });
                },
                sortDescendingAge: function () {
                    let _this = this;
                    fetch(`${baseAddress}/api/adminApi/OrderByDescendingAge`, { 
                        method: "GET" 
                        }).then(response => {
                            if (response.ok) return response.json();
                        }).then(data => {
                            _this.putUser = data;
                        }).catch(error => {
                            alert(error);
                        });
                },
                openCreateUserModal() {
                    let _this = this
                    _this.newUser = {
                        name: '',
                        email: '',
                        gender: '',
                        birthday: '',
                        phone: '',
                        password: '',
                    };
                    $('#createUserModal').modal('show');
                },
                createUser() {
                    let _this = this
                    fetch(`${baseAddress}/api/adminApi/AdminManageUser`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(_this.newUser),
                    })
                        .then((response) => {
                            if (response.ok) {
                                return response.json();
                            } else {
                                return null;
                            }
                        })
                        .then((data) => {
                            alert("使用者成功新增");
                            _this.putUser.push(data);
                            $('#createUserModal').modal('hide');
                        })
                        .catch((err) => {
                            alert("無法新增使用者");
                        });
                },
                display: function (userId) {
                    let _this = this;
                    _this.editOpen = false;
                    $('#exampleModal').modal('show');
                    fetch(`${baseAddress}/api/adminApi/GetUserDetail/${userId}`)
                    .then(response => response.json())
                        .then(data => {
                            $('#UserDetail').modal('show');
                            _this.UpdateUser = data;
                        }).catch(err => {
                            alert("資料讀取失敗");
                        });
                },
                edit: function () {
                    let _this = this;
                    _this.editOpen = true;
                },
                updateUser: function (userId) {
                    let _this = this;
                    let result = confirm(`確定要更新產品名稱為${_this.UpdateUser.name}的產品資訊？`)
                    let formData = new FormData();
                    if (result == true) {
                        let request = {
                            UserId: "",
                            Name: _this.UpdateUser.name,
                            Email: _this.UpdateUser.email,
                            Gender: _this.UpdateUser.gender,
                            Birthday: _this.UpdateUser.birthday,
                            Phone: _this.UpdateUser.phone,
                        };
                        fetch(`${baseAddress}/api/adminApi/AdminPutUser/${userId}`, {
                            method: "PUT",
                            headers: {
                                "Content-Type": "application/json",
                            },
                            body: JSON.stringify(request)
                        })
                            .then((response) => { response.json() })
                            .then(data => {
                                _this.editOpen = false;
                                // _this.newUser = data;
                                console.log(data);
                            })
                            .catch(err => {
                                alert("修改失敗,請檢查必填有無填寫")
                            });
                    }
                },
                deleteUser: function (userId) {
                    let _this = this;
                    let result = confirm(`確定要刪除產品編號為${userId}的商品嗎？`);
                    if (result == true) {
                        fetch(`${baseAddress}/api/adminApi/AdminDeleteUser/${userId}`, {
                            method: "DELETE"
                        })
                            .then(response => response.text())
                            .then(data => {
                                alert(data);
                            })
                            .catch(err => {
                                alert("刪除失敗");
                            });
                    }
                },
                search: function () {
                    let _this = this;
                    fetch(`${baseAddress}/api/adminApi/AdminSearchUser?query=${_this.searchQuery}`, {
                        method: "GET"
                        }).then(response => {
                            if (response.ok) return response.json();
                        }).then(data => {
                            _this.putUser = data;
                        }).catch(error => {
                            alert(error);
                        });
                }
            }
        });

    </script>
}
