@section Styles{
    <link href="~/css/planetk.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-4bw+/aepP/YC94hEpVNVgiZdgIC5+VKNBQNGCHeKRQN+PtmoHDEXuppvnDJzQIu9" crossorigin="anonymous">
    <link href="~/css/admindashboard.css" rel="stylesheet" />
}


<!--app-->
<div id="app">
    <!--app-->
    <div class="container">
        <br>
    </div>
    <!--頁首-->
    <header class="container-fluid row">
        <!--區塊-->
        <!--區塊-->
    </header>
    <!--頁首底-->
    <!--第一段-->
    <div class="container-fluid row  justify-content-between">
        <div class="col-1"></div>
        <div class="col-3"></div>
    </div>
    <br>
    <!--第二段-->
    <nav class="navbar bg-body">
        <div class="container-fluid justify-content-end">
            <form class="d-flex" role="search">
                @* <img src="./pic/search.png" width="100" height="60">*@
                <input style="width: 300px; height:70px;" class="form-control " type="search" placeholder="Search" aria-label="Search"
                       v-model="Filter" @@keyup="filterorder">
                <button class="btn btn-outline-secondary " style="color :#1e2154" @*type="submit"*@>
                    <Fieldset>搜尋</Fieldset>
                </button>
            </form>
        </div>
    </nav>
    <br>
    <!--第三段-->
    <div class="container-fluid row">
        <!--管理選單-->
        <div class="col-2">
            <ul class="list-group">
                <!--管理選單列--> <!--改道layout用-->
                @*                <a class="btn" href="https://localhost:7025/api/Admin/Admin">使用者管理</a>
                <a class="btn" href="https://localhost:7025/api/Order/Order">訂單管理</a>
                <a class="btn" href="http://127.0.0.1:5500/admin.html">數據分析</a>
                <a class="btn" href="https://localhost:7025/api/Merchandise/Merchandise">商品管理</a>*@
                <!--管理選單底-->
            </ul>
        </div>
        <!--管理內容-->
        <div class="col-10">
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <td>OrderId</td>
                        <td>UserId</td>
                        <td>OrderDate</td>                        
                        <td> </td>
                        <td> </td>
                    </tr>
                </thead>
                <tbody>

                    <tr v-for="item in OrderDTOes ">
                        <template v-if="item.Edit==true">
                            <td><label>{{item.orderId}}</label></td>
                            <td><label>{{item.userId}}</label></td>
                            <td><input v-model="item.orderDate" /></td>
                            <td>
                                <button type="button" class="btn btn-success" @@click="update(item)">
                                    <div class="horizontal-text">
                                        <span>儲存</span>
                                    </div>
                                </button>
                            </td>
                            <td>
                                <button type="button" class="btn btn-info" @@click="cancel">
                                    <div class="horizontal-text">
                                        <span>取消</span>
                                    </div>
                                </button>
                            </td>
                        </template>
                        <template v-else>
                            <td><label>{{item.orderId}}</label></td>
                            <td><label>{{item.userId}}</label></td>
                            <td><label>{{item.orderDate}}</label></td>
                            <td>
                                <button type="button" class="btn  btn-warning" @@click="edit(item.orderId)">
                                    <div class="horizontal-text">
                                        <span>修改</span>
                                    </div>
                                </button>
                            </td>
                            <td>
                                <button type="button" class="btn btn-danger" @@click="deleteOrder(item.orderId)">
                                    <div class="horizontal-text">
                                        <span>刪除</span>
                                    </div>
                                </button>
                            </td>
                        </template>
                    </tr>

                </tbody>
            </table>
        </div>
    </div>
    <!--app-->
</div>
<!--app-->
<br />
<br />







@section Scripts{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.4.0/axios.min.js" integrity="sha512-uMtXmF28A2Ab/JJO2t/vYhlaa/3ahUOgj1Zf27M5rOo8/+fcTUVH0/E0ll68njmjrLqOBjXM3V9NiPFL5ywWPQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="https://unpkg.com/vue@next"></script>
    <script src="~/js/planetk.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-HwwvtgBNo3bZJJLYd8oVXjrBZt8cqVSpeBNS5n7C8IVInixGAoxmnlMuBnhbgrkm" crossorigin="anonymous">
    </script>
    <script src="https://kit.fontawesome.com/ea5c2c7c03.js" crossorigin="anonymous"></script>





    <script>
        var baseAddress = "https://localhost:7025";
        var vueApp = {
            data() {
                return {
                    OrderDTOes: [],
                    Filter: '',
                    //
                    originalorderDate: '',

                };
            },
            mounted: function () {
                let _this = this;
                //alert("mouned");
                _this.filterorder();
            },
            methods: {


                filterorder: function () {
                    let _this = this;
                    //alert("篩選");
                    var request = {};

                    //直接GET
                    axios.get(`${baseAddress}/api/Order/OrderGET`)
                        .then(response => {
                            _this.OrderDTOes = response.data;
                            for (var i = 0; i < _this.OrderDTOes.length; i++) {
                                var item = _this.OrderDTOes[i];
                                item.Edit = false;
                            }
                        })
                        .catch(err => {
                            alert(err);
                        });



                    //查詢
                    //request.OrderId  = _this.Filter;
                    //request.OrderId = isNaN(Number(_this.Filter)) ? -1 : Number(_this.Filter);
                    //request.OrderId = request.UserId = request.OrderDate = _this.Filter;
                    //axios.post(`${baseAddress}/api/Order/OrderSeachL`, request)
                    //.then(response => {
                    //    _this.OrderDTOes = response.data;
                    //    for (var i = 0; i < _this.OrderDTOes.length; i++) {
                    //        var item = _this.OrderDTOes[i];
                    //        item.Edit = false;
                    //    }
                    //})
                    //.catch(err => {
                    //    alert(err);
                    //});

                },

                //edit
                edit: function (orderId) {
                    //alert("edit");
                    let _this = this;
                    for (var i = 0; i < _this.OrderDTOes.length; i++) {
                        var item = _this.OrderDTOes[i];
                        if (item.orderId == orderId) {
                            item.Edit = true;

                            _this.originalorderDate = item.orderDate;
                        }
                    }
                },
                //
                cancel: function () {
                    let _this = this;
                    for (var i = 0; i < _this.OrderDTOes.length; i++) {
                        var item = _this.OrderDTOes[i];
                        if (item.Edit == true) {
                            item.Edit = false;
                            item.orderDate = _this.originalorderDate;

                        }
                    }
                },
                //
                update: function (item) {
                    let _this = this;
                    var request = {};
                    request.orderId = item.orderId;
                    request.userId = item.userId;
                    request.orderDate = item.orderDate;
                    axios.put(`${baseAddress}/api/Order/OrderuPUT/${item.orderId}`, request).then(response => {
                        alert(response.data);
                        _this.filterorder();
                    }).catch(err => {
                        alert(err);
                    });
                },
                //
                deleteOrder: function (orderId) {
                    var ret = confirm('確定要刪除嗎');
                    let _this = this;

                    if (ret == true) {
                        axios.delete(`${baseAddress}/api/Order/OrderDELETE`).then(response => {
                            alert(response.data);
                            _this.filterorder();
                        }).catch(err => {
                            alert(err);
                        })
                    }

                },


















            }

        };
        var app = Vue.createApp(vueApp).mount("#app");

    </script>











}
