@section Styles{
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-4bw+/aepP/YC94hEpVNVgiZdgIC5+VKNBQNGCHeKRQN+PtmoHDEXuppvnDJzQIu9" crossorigin="anonymous">
    <link href="~/css/admindashboard.css" rel="stylesheet" />
}


<!--app-->
<div id="app">
    <!--app-->
    <div class="container">
        <br>
    </div>
    <!--頁首-->
    <header class="container-fluid row">
        <!--區塊-->
        <!--區塊-->
    </header>
    <!--頁首底-->
    <!--第一段-->
    <div class="container-fluid row  justify-content-between">
        <div class="col-1"></div>
        <div class="col-3"></div>
    </div>
    <br>
    <!--第二段-->
    <div class="container-fluid  row  ">
        <div class="col-9"></div>
        <div class="col-3  " style="width:25%; color: gray; ">
            關鍵字搜尋：<input type="text" v-model="Filter" class="form-control" placeholder="請輸入篩選關鍵字" @@keyup="filterorder" />
        </div>
    </div>
    <br>
    <!--第三段-->
    <div class="container-fluid ">
        <!--管理選單-->
@*        <div class="col-1">
        </div>*@
        <!--管理內容-->
        <div class=" table-responsive"  >
            <table class="table table-bordered "  >
                <thead>
                    <tr>
                        <th >訂單ID</th>
                        <th>商品方案ID</th>
                        <th>名稱</th>
                        <th>數量</th>
                        <th>折扣</th>
                        <th>商品價格</th>
                        <th>成立日期</th>
                        <th>操作 </th>
                    </tr>
                </thead>
                <tbody>

                    <tr v-for="item in OrderDTOes "  >
                        <template v-if="item.Edit==true" class="text-center">
                            <td><label>{{item.orderId}}</label></td>
                            <td><label>{{item.planId}}</label></td>
                            <td><label>{{item.name}}</label></td>
                            <td><input v-model="item.quantity" /></td>
                            <td><input v-model="item.discount" /></td>
                            <td><label>{{item.unitPrice}}</label></td>
                            <td><input type="date" v-model="item.useDate" /></td>
                            <td>
                                <div class="d-flex justify-content-around">
                                    <button type="button" class="btn btn-success" @@click="update(item)">
                                        <div class="horizontal-text">
                                            <span>儲存</span>
                                        </div>
                                    </button>
                                    <button type="button" class="btn btn-info" @@click="cancel">
                                        <div class="horizontal-text">
                                            <span>取消</span>
                                        </div>
                                    </button>
                                </div>
                            </td>
                        </template>
                        <template v-else class="text-center">
                            <td><label>{{item.orderId}}</label></td>
                            <td><label>{{item.planId}}</label></td>
                            <td><label>{{item.name}}</label></td>
                            <td><label>{{item.quantity}}</label> </td>
                            <td><label>{{item.discount}}</label></td>
                            <td><label>{{item.unitPrice}}</label></td>
                            <td><label>{{item.useDate}}</label></td>
                            <td>
                                <div class="d-flex justify-content-around">
                                    <button :disabled="notchange" type="button" class="btn  btn-warning" @@click="edit(item.orderId,item.planId)">
                                        <div class="horizontal-text ">
                                            <span>修改</span>
                                        </div>
                                    </button>

                                    <button :disabled="notchange" type="button" class="btn btn-danger" @@click="deleteOrder(item.orderId,item.planId)">
                                        <div class="horizontal-text">
                                            <span>刪除</span>
                                        </div>
                                    </button>
                                </div>
                            </td>
                        </template>
                    </tr>

                </tbody>
            </table>
        </div>
    </div>
    <!--app-->
</div>
<!--app-->
<br />
<br />







@section Scripts{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.4.0/axios.min.js" integrity="sha512-uMtXmF28A2Ab/JJO2t/vYhlaa/3ahUOgj1Zf27M5rOo8/+fcTUVH0/E0ll68njmjrLqOBjXM3V9NiPFL5ywWPQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="https://unpkg.com/vue@next"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-HwwvtgBNo3bZJJLYd8oVXjrBZt8cqVSpeBNS5n7C8IVInixGAoxmnlMuBnhbgrkm" crossorigin="anonymous">
    </script>
    <script src="https://kit.fontawesome.com/ea5c2c7c03.js" crossorigin="anonymous"></script>





    <script>
        var baseAddress = "https://localhost:7025";
        var vueApp = {
            data() {
                return {
                    OrderDTOes: [],
                    Filter: '',
                    //
                    //originalorderDate: '',
                    //
                    originalquantity: '',
                    originaldiscount: '',
                    originaluseDate: '',

                };
            },
            mounted: function () {
                let _this = this;
                //alert("mouned");
                _this.filterorder();
            },
            computed: {               
                notchange: function () {
                    return this.OrderDTOes.some(x => x.Edit);
                },
            },
            methods: {


                filterorder: function () {
                    let _this = this;
                    //alert("篩選");
                    var request = {};

                    //查詢
                    //request.OrderId  = _this.Filter;
                    request.OrderId = isNaN(Number(_this.Filter)) ? -1 : Number(_this.Filter);
                    request.UserId = request.OrderId;
                    //request.OrderDate = _this.Filter;
                    axios.post(`${baseAddress}/api/Order/OrderSeachL`, request)
                        .then(response => {
                            _this.OrderDTOes = response.data;
                            for (var i = 0; i < _this.OrderDTOes.length; i++) {
                                var item = _this.OrderDTOes[i];
                                item.Edit = false;
                                if (_this.OrderDTOes[i].useDate) {
                                    var d = new Date(_this.OrderDTOes[i].useDate);
                                    var m = (d.getMonth() + 1).toString();
                                    var dy = (d.getDate()).toString();      
                                    _this.OrderDTOes[i].useDate = `${d.getFullYear()}-${m.length == 1 ? m.padStart(2, "0") : m}-${dy.length == 1 ? dy.padStart(2, "0") : dy}`
                                } else {
                                    _this.OrderDTOes[i].useDate = "";
                                }
                                
                            }




                        })
                        .catch(err => {
                            alert(err);
                        });


 

                    //直接GET
                    //axios.get(`${baseAddress}/api/Order/OrderGET`)
                    //    .then(response => {
                    //        _this.OrderDTOes = response.data;
                    //        for (var i = 0; i < _this.OrderDTOes.length; i++) {
                    //            var item = _this.OrderDTOes[i];
                    //            item.Edit = false;
                    //        }
                    //    })
                    //    .catch(err => {
                    //        alert(err);
                    //    });

                },

                //edit
                edit: function (orderId, planId) {
                    //alert("edit");
                    let _this = this;
                    for (var i = 0; i < _this.OrderDTOes.length; i++) {
                        var item = _this.OrderDTOes[i];
                        if (item.orderId == orderId && item.planId == planId) {
                            item.Edit = true;

                            //_this.originalorderDate = item.orderDate;
                            _this.originalquantity = item.quantity;
                            _this.originaldiscount = item.discount;
                            _this.originaluseDate = item.useDate;

                        }
                    }
                },
                //
                cancel: function () {
                    let _this = this;
                    for (var i = 0; i < _this.OrderDTOes.length; i++) {
                        var item = _this.OrderDTOes[i];
                        if (item.Edit == true) {
                            item.Edit = false;
                            //item.orderDate = _this.originalorderDate;
                            item.quantity = _this.originalquantity;
                            item.discount = _this.originaldiscount;
                            item.useDate = _this.originaluseDate;

                        }
                    }
                },
                //
                update: function (item) {
                    let _this = this;
                    var request = {};
                    request.orderId = item.orderId;         //至少要有orderId  跟要改項目
                    //request.userId = item.userId;
                    //request.orderDate = item.orderDate;
                    request.quantity = item.quantity;
                    request.discount = item.discount;
                    request.useDate = item.useDate;

                    axios.put(`${baseAddress}/api/Order/OrderPUT/${item.orderId}/${item.planId}`, request).then(response => {
                        alert(response.data);
                        _this.filterorder();
                    }).catch(err => {
                        alert(err);
                    });
                },
                //
                deleteOrder: function (orderId, planId) {
                    var ret = confirm('確定要刪除嗎');
                    let _this = this;

                    if (ret == true) {
                        axios.delete(`${baseAddress}/api/Order/OrderDELETE/${orderId}/${planId}`).then(response => {
                            alert(response.data);
                            _this.filterorder();
                        }).catch(err => {
                            alert(err);
                        })
                    }

                },


















            }

        };
        var app = Vue.createApp(vueApp).mount("#app");

    </script>











}
