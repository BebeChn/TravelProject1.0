@section Styles{

    <link href="~/css/admindashboard.css" rel="stylesheet" />
}
<div id="app">
    <div class="container">
        <br>
    </div>
    <!--頁首-->
    <header class="container-fluid row">
        <!--區塊-->
        <!--區塊-->
    </header>
    <!--頁首底-->
    <!--第一段-->
    <div class="container-fluid row   ">
        <div class="col-2"></div>
        <button type="button" class="btn solid  col-3 " style="font-weight: bold;font-size: 1.2rem;" @@click="Datehigh">時間由大到小排序</button>
        <br>
        <button type="button" class="btn solid  col-3" style="font-weight: bold;font-size: 1.2rem;" @@click="Datelower">時間由小到大排序</button>
        <div class="col-4"></div>
    </div>
    <br>
    <!--第二段-->
    <div class="container-fluid row    ">
        <nav class="  navbar bg-body   ">
            <!--為什麼在nav裡面   因為這樣線才剛好對齊-->

            <div class="col-2"></div>
            <!--新增會員-->
            <div class="col-4  form-group  ">
@*                <button type="button" class="btn btn-success" @@click="showModal">新增會員</button>
*@            </div>
            <div class="col-2"></div>

            <div class="col-4 form-group justify-content-end  ">
                <form class="d-flex" role="search">
                    <!--輸入關鍵字-->
                    <input style="width: 300px; height:70px;" class="form-control" type="text" placeholder="Search" aria-label="Search"
                           v-model="filter" @@keyup="filterUser">
                    <button class="btn btn-outline-secondary " style="color :#1e2154" type="submit" @*@@click="filterUser"*@>
                        <Fieldset>搜尋</Fieldset>
                    </button>
                </form>

            </div>
            <!--為什麼在nav裡面   因為這樣線才剛好對齊-->
        </nav>
    </div>
    <!--第二段底-->
    <div class="container-fluid row    ">
        <div class="col-1"></div>
        <!--新增會員-->
        <div class="form-group col-4  ">
            <button type="button" class="btn btn-success" @@click="showModal">新增會員</button>
        </div>
        <div class="col-7"></div>
    </div>
    <!--第三段-->
    <div class="container-fluid  ">
        <!--管理選單-->
        @*        <div class="col-2">
        <ul class="list-group">
        <!--管理選單列-->  <!--改道layout用-->
        <a class="btn" href="https://localhost:7025/api/Admin/Admin">使用者管理</a>
        <a class="btn" href="https://localhost:7025/api/Order/Order">訂單管理</a>
        <a class="btn" href="http://127.0.0.1:5500/admin.html">數據分析</a>
        <a class="btn" href="https://localhost:7025/api/Merchandise/Merchandise">商品管理</a>
        <!--管理選單底-->
        </ul>
        </div>*@
        <!--顯示管理內容-->
        <div class="table-responsive">
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>姓名</th>
                        <th>性別</th>
                        <th>信箱</th>
                        <th>日期</th>
                        <th>操作</th>

                    </tr>
                </thead>
                <tbody>
                    <tr v-for="item in AdminDTOes" class="text-center">
                        <template v-if="item.Edit==true">
                            <td>{{item.userId}}</td>
                            <td><input class="w-100" v-model="item.name" /></td>
                            <td><input class="w-100" v-model="item.gender" /></td>
                            <td><input class="w-100" v-model="item.email" /></td>
                            <td><input class="w-100" v-model="item.birthday" /></td>
                            <td>
                                <div class="d-flex justify-content-around">
                                    <button type="button" class="btn btn-success" @@click="update(item)">
                                        <div class="horizontal-text">
                                            <span>更新</span>
                                        </div>
                                    </button>
                                    <button type="button" class="btn btn-info" @@click="cancel">
                                        <div class="horizontal-text">
                                            <span>取消</span>
                                        </div>
                                    </button>
                                </div>
                            </td>
                        </template>
                        <template v-else>
                            <td>{{item.userId}}</td>
                            <td>{{item.name}}</td>
                            <td>{{item.gender}}</td>
                            <td>{{item.email}}</td>
                            <td>{{formatDate(item.birthday)}}</td>
                            <td>
                                <div class="d-flex justify-content-around">
                                    <button type="button" class="btn  btn-warning" @@click="edit(item.userId)">
                                        <div class="horizontal-text">
                                            <span>修改</span>
                                        </div>
                                    </button>
                                    <button type="button" class="btn btn-danger" @@click="deleteUsr(item.userId)">
                                        <div class="horizontal-text">
                                            <span>刪除</span>
                                        </div>
                                    </button>
                                </div>
                            </td>
                        </template>
                    </tr>
                </tbody>
            </table>
        </div>
        <!--col9-->
        <!------------------------------------------新增紀錄的畫面--------------------------------------->
        <!-- Modal Body -->
        <!-- if you want to close by clicking outside the modal, delete the last endpoint:data-bs-backdrop and data-bs-keyboard -->
        <div class="modal fade" id="insertModal" tabindex="-1" data-bs-backdrop="static" data-bs-keyboard="false" role="dialog" aria-labelledby="modalTitleId" aria-hidden="true">
            <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered " role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="modalTitleId">新增商品紀錄</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="form-group">
                            <label class="form-label">名稱</label>
                            <input v-model="addname" type="text" class="form-control" />
                        </div>
                        <div class="form-group">
                            <label class="form-label">信箱</label>
                            <input v-model="addemail" type="text" class="form-control" />
                        </div>
                        <div class="form-group">
                            <label class="form-label">電話</label>
                            <input v-model="addphone" type="text" class="form-control" />
                        </div>
                        <div class="form-group">
                            <label class="form-label">密碼</label>
                            <input v-model="addpasswordHash" type="text" class="form-control" />
                        </div>
                        ____
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">關閉</button>
                        <button type="button" class="btn btn-primary" @@click="insert">新增</button>
                    </div>
                </div>
            </div>
        </div>
        <!------------------------------------------新增紀錄的畫面底--------------------------------------->
        <!--最後一句-->
    </div>
</div>


@section Scripts{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.4.0/axios.min.js" integrity="sha512-uMtXmF28A2Ab/JJO2t/vYhlaa/3ahUOgj1Zf27M5rOo8/+fcTUVH0/E0ll68njmjrLqOBjXM3V9NiPFL5ywWPQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="https://unpkg.com/vue@next"></script>
    <script src="~/js/planetk.js"></script>
    <script>
        var baseAddress = "https://localhost:7025"


        var vueApp = {
            data() {
                return {
                    AdminDTOes: [],
                    filter: '',
                    name: '',
                    gender: '',
                    email: '',
                    createDate: '',
                    originalname: '',
                    originalgender: '',
                    originalemail: '',
                    originalbirthday: '',
                    //新增
                    addname: '',
                    addemail: '',
                    addphone: '',
                    addpasswordHash: '',

                };
            },
            mounted: function () {
                let _this = this;
                //alert("mount");
                _this.filterUser();
            },
            computed: {
                //轉換日期
                formatDate: function () {
                    return function (str) {
                        if (!str) return "";
                        var d = new Date(str);
                        return `${d.getFullYear()}-${d.getMonth() + 1}-${d.getDate()}`;
                    }
                },
            },
            methods: {
                filterUser: function () {
                    //alert("篩選");
                    let _this = this;
                    var request = {};
                    //axios.get(`${baseAddress}/api/Admin/AdminGET`)
                    //request.UserId = isNaN(_this.filter) ? -1 : Number(_this.filter);
                    request.Name = request.Email = _this.filter;
                    axios.post(`${baseAddress}/api/Admin/AdminSearch`, request)
                        .then(response => {
                            _this.AdminDTOes = response.data;
                            for (var i = 0; i < _this.AdminDTOes.length; i++) {
                                var item = _this.AdminDTOes[i];
                                item.Edit = false;
                            }
                        })
                        .catch(err => {
                            alert(err);
                        });
                },


                edit: function (userId) {
                    //alert("edit");
                    let _this = this;
                    for (var i = 0; i < _this.AdminDTOes.length; i++) {
                        var item = _this.AdminDTOes[i];
                        if (item.userId == userId) {
                            item.Edit = true;
                            _this.originalname = item.name
                            _this.originalgender = item.gender
                            _this.originalemail = item.email
                            _this.originalbirthday = item.birthday
                        }
                    }
                },


                update: function (item) {
                    //alert("update");
                    let _this = this;
                    var request = {};

                    request.UserId = item.userId;
                    request.Name = item.name;
                    request.Gender = item.gender;
                    request.Email = item.email;
                    request.Birthday = item.birthday;
                    axios.put(`${baseAddress}/api/Admin/AdminPUT/${item.userId}`, request).then(response => {
                        alert(response.data);
                        _this.filterUser();
                    }).catch(err => {
                        alert(err);
                    });
                },


                cancel: function () {
                    //alert("cancel")
                    let _this = this;
                    for (var i = 0; i < _this.AdminDTOes.length; i++) {
                        var item = _this.AdminDTOes[i];
                        if (item.Edit == true) {
                            item.Edit = false;
                            item.name = _this.originalname
                            item.gender = _this.originalgender
                            item.email = _this.originalemail
                            item.birthday = _this.originalbirthday
                        }
                    }
                },


                deleteUsr: function (userId) {
                    //alert("delete");
                    var ret = confirm("確定要刪除嗎");
                    let _this = this;

                    if (ret == true) {
                        axios.delete(`${baseAddress}/api/Admin/AdminDELETE/${userId}`).then(response => {
                            alert(response.data);
                            _this.filterUser();
                        }).catch(err => {
                            alert(err);
                        })
                    }
                },


                Datelower: function () {
                    let _this = this;
                    _this.AdminDTOes.sort(function (x, y) {
                        return new Date(x.birthday) - new Date(y.birthday)
                    });
                },


                Datehigh: function () {
                    let _this = this;
                    _this.AdminDTOes.sort(function (x, y) {
                        return new Date(y.birthday) - new Date(x.birthday)
                    });
                },


                //顯示畫面而已
                showModal: function () {
                    //alert("新增會員");
                    $("#insertModal").modal("show");
                },

                //新增
                insert: function () {
                    let _this = this;
                    //alert("insert");

                    var request = {

                        UserId: 0,
                        Name: _this.addname,
                        Email: _this.addemail,
                        Gender: 'F',
                        Phone: _this.addphone,
                        PasswordHash: _this.addpasswordHash,
                        Birthday: '1980-09-21T00:00:00',
                    };
                    axios.post(`${baseAddress}/api/Admin/ADDAdmin`, request).then(response => {
                        alert(response.data);
                        //$('#insertModal').modal("hide");
                        _this.filterUser();
                    }).catch(err => {
                        alert(err);
                    });

                },




                //最後一段
            }



        };

        var app = Vue.createApp(vueApp).mount("#app");
    </script>





    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-4bw+/aepP/YC94hEpVNVgiZdgIC5+VKNBQNGCHeKRQN+PtmoHDEXuppvnDJzQIu9" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-HwwvtgBNo3bZJJLYd8oVXjrBZt8cqVSpeBNS5n7C8IVInixGAoxmnlMuBnhbgrkm" crossorigin="anonymous">
    </script>
    <script src="https://kit.fontawesome.com/ea5c2c7c03.js" crossorigin="anonymous"></script>

    }
