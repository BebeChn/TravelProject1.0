@section Styles{
    <link href="~/css/planetk.css" rel="stylesheet" />
}
<div id="app">
    <div class="container">
        <br>
    </div>
    <!--頁首-->
    <header class="container-fluid row">
        <!--區塊-->
        <!--區塊-->
    </header>
    <!--頁首底-->
    <!--第一段-->
    <div class="container-fluid row  justify-content-between">
        <div class="col-2"></div>
        <button type="button" class="btn  solid col-1">統計</button>
        <br>
        <button type="button" class="btn solid  col-1">按週統計</button>
        <button type="button" class="btn solid  col-1">按月統計</button>
        <br>
        <button type="button" class="btn solid  col-1">時間</button>
        <div class="col-4"></div>
    </div>
    <!--第二段-->
    <nav class="navbar bg-body">
        <div class="container-fluid justify-content-end">
            <form class="d-flex" role="search">
                @*<img src="./pic/search.png" width="100" height="60">*@
                <!--輸入關鍵字-->
                <input class="form-control" type="text" placeholder="Search" aria-label="Search"
                       v-model="filter" @@keyup="filterUser">
                <button class="btn btn-outline-secondary " style="color :#1e2154" type="submit">
                    <Fieldset>搜尋</Fieldset>
                </button>
            </form>
        </div>
    </nav>
    <br>
    <!--第三段-->
    <div class="container-fluid row">
        <!--管理選單-->
        <div class="col-2">
            <ul class="list-group">
                <!--管理選單列-->
                <a class="btn" href="http://127.0.0.1:5500/admin.html">使用者管理</a>
                <a class="btn" href="http://127.0.0.1:5500/admin.html">訂單管理</a>
                <a class="btn" href="http://127.0.0.1:5500/admin.html">數據分析</a>
                <a class="btn" href="http://127.0.0.1:5500/admin.html">商品管理</a>
                <!--管理選單底-->
            </ul>
        </div>
        <!--顯示管理內容-->
        <div class="col-10">
            <table class="table table-bordered">
                <thead>
                <tr>
                    <td>ID</td>
                    <td>姓名</td>
                    <td>性別</td>
                    <td>地址</td>
                    <td>信箱</td>
                </tr>
                </thead>
                <tbody>
                <tr v-for="item in AdminDTOes">
                    <template v-if="item.Edit==true">
                        <td>{{item.userId}}</td>
                        <td><input v-model="item.name" /></td>
                        <td><input v-model="item.gender" /></td>
                        <td><input v-model="item.address" /></td>
                        <td><input v-model="item.email" /></td>
                        <td>
                            <button type="button" class="btn btn-success" @@click="update(item)">更新</button>
                            <button type="button" class="btn btn-info" @@click="cancel">取消</button>
                        </td>
                    </template>
                    <template v-else>
                        <td>{{item.userId}}</td>
                        <td>{{item.name}}</td>
                        <td>{{item.gender}}</td>
                        <td>{{item.address}}</td>
                        <td>{{item.email}}</td>
                        <td>
                            <button type="button" class="btn btn-primary" @@click="edit(item.UserId)">修改</button>
                                <button type="button" class="btn btn-danger" @@click="deleteUsr(item.userId)">刪除</button>
                        </td>
                    </template>
                </tr>
                </tbody>
            </table>
        </div>
        <!--顯示更多內容-->
        <div class="col-10">
        </div>
</div>



@section Scripts{
        <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.4.0/axios.min.js" integrity="sha512-uMtXmF28A2Ab/JJO2t/vYhlaa/3ahUOgj1Zf27M5rOo8/+fcTUVH0/E0ll68njmjrLqOBjXM3V9NiPFL5ywWPQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
        <script src="https://unpkg.com/vue@next"></script>
    <script src="~/js/planetk.js"></script>
     <script>
     var baseAddress = "https://localhost:7025"


        var vueApp={
            data(){
                return{
                    AdminDTOes:[],
                        filter:'',
                        name:'',
                        gender:'',
                        address:'',
                        email:'',
                        originalname:'',
                        originalgender:'',
                        originaladdress:'',
                        originalemail: '',
                };
            },
             mounted:function(){
                   let _this = this;
                    //alert("mount");
                    _this.filterUser();
            },
         methods:{
                 filterUser: function () {
                        //alert("篩選");
                        let _this=this;
                        var request={};
                        //axios.GET(`${baseAddress}/api/Admin/AdminGET`)
                        request.UserId=isNaN(_this.filterUser)?-1:Number(_this.Filter);
                        request.Name = request.Address = request.Email = _this.filter;
                        axios.post(`${baseAddress}/api/Admin/AdminSearch`, request)
                        .then(response=>{
                            _this.AdminDTOes=response.data;
                            for (var i = 0; i < _this.AdminDTOes.Length;i++){
                                var item = _this.AdminDTOes[i];
                                item.Edit=false;
                            }
                        })
                        .catch(err => {
                            alert(err);
                         });
                       },
                    edit: function (UserId) {
                         //alert("edit");
                         let _this=this;
                        for (var i = 0; i < _this.AdminDTOes.length; i++) {
                            var item = _this.AdminDTOes[i];
                            if (item.UserId == UserId) {
                                item.Edit = true;
                                _this.originalname =  item.name
                                _this.originalgender = item.gender
                                _this.originaladdress =item.address
                                _this.originalemail = item.email
                            }
                        }
                    },
                update: function (item) {
                        //alert("update");
                        let _this=this;
                        var request={};

                        request.UserId = item.userId;
                　　    request.name = item.name;
                        request.gender = item.gender;
                        request.address = item.address;
                        request.email = item.email;
                        axios.put(`${baseAddress}/api/Admin/AdminPUT/${item.userId}`, request).then(response=>{
                            alert(response.data);
                            _this.filterUser();
                        }).catch(err=>{
                            alert(err);
                        });
                    },
                    cancel: function () {
                        //alert("cancel")
                        let _this=this;
                        for (var i = 0; i < _this.AdminDTOes.length; i++) {
                            var item = _this.AdminDTOes[i];
                            if (item.Edit == true) {
                                item.Edit = false;
                                item.name = _this.originalname
                                item.gender = _this.originalgender
                                item.address = _this.originaladdress
                                item.email = _this.originalemail
                            }
                        }
                    },
                    deleteUsr: function (userId) {
                        //alert("delete");
                        var ret=confirm("確定要刪除嗎");
                        let _this=this;

                        if(ret==true){
                            axios.delete(`${baseAddress}/api/Admin/AdminDELETE/${userId}`).then(response => {
                                alert(response.data);
                                _this.filterUser();
                            }).catch(err => {
                                alert(err);
                            })
                        }
                    },
                }
        };

            var app = Vue.createApp(vueApp).mount("#app");

    </script>










@*        <script>
            var baseAddress = "https://localhost:7025"

            function GetEmployees() {

                fetch(`${baseAddress}/api/Admin/AdminGET`, {
                    method:"GET"
                }).then(response=>{
                    return response.json();
                }).then(data =>{
                    alert(JSON.stringify(data));
                }).catch(err=>{
                    alert(err);
                })
            }
        </script>*@
}
